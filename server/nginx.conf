server {
    # listen 443 ssl default_server http2;
    # listen [::]:443 ssl default_server;
    listen 80 default_server;
    listen [::]:80 default_server;
    
    keepalive_timeout   70;
    client_max_body_size 100M;

    root /home/zhoma/projects/oi-sana-diploma/server/client;
    index index.html;

    server_name _;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 3;
        gzip_static on;
        gzip_min_length 600;
        gzip_types
                application/javascript
                application/x-javascript
                application/json
                application/css
                application/manifest+json
                application/geo+json
                application/pdf
                text/css
                text/javascript
                text/plain
                text/json;

    location / {
        if ( $uri = '/index.html' ) {
                add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        alias /home/zhoma/projects/oi-sana-diploma/server/client/;
        try_files $uri /index.html =404;

        location ~* \.(gif|jpe?g|png|webp|ico|svg|css|js|mp4)$ {
                expires 1M;
                add_header Cache-Control "max-age=2592000";
        }
     }

    location /uploads {
        alias /home/zhoma/projects/oi-sana-diploma/server/public/uploads;
        try_files $uri $uri/ =404;
        expires modified 1y;
        add_header Cache-Control "public";
        access_log off;

        location /uploads/stream {
            alias /home/zhoma/projects/oi-sana-diploma/server/public/uploads;
            try_files $uri $uri/ =403;

            # enable thread bool
            aio threads=default;
            # enable nginx slicing
            slice              1m;
            proxy_cache_key    $host$uri$is_args$args$slice_range;
            proxy_set_header   Range $slice_range;
            proxy_http_version 1.1;
            proxy_cache_use_stale updating;
        }
    }

   location ~ ^/(api|socket.io)/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_http_version 1.1;

        proxy_pass http://127.0.0.1:8080;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
    }

    # ssl_certificate      /etc/nginx/certs/certificate.crt;
    # ssl_certificate_key  /etc/nginx/certs/private.key;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_ciphers         HIGH:!aNULL:!MD5;
}